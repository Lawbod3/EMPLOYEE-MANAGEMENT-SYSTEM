version: '3.8'

services:
  # =========================
  # CONFIG SERVER
  # =========================
  config-server:
    image: configserver:latest
    container_name: config-server
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - CONFIG_GIT_URI=${CONFIG_GIT_URI}
      - CONFIG_GIT_USERNAME=${CONFIG_GIT_USERNAME}
      - CONFIG_GIT_PASSWORD=${CONFIG_GIT_PASSWORD}
      - EUREKA_URL=http://discovery-server:8761/eureka
    depends_on:
      - discovery-server
    networks:
      - darum-network

  # =========================
  # EUREKA / DISCOVERY SERVER
  # =========================
  discovery-server:
    image: eurekaserver:latest
    container_name: discovery-server
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    networks:
      - darum-network

  # =========================
  # API GATEWAY
  # =========================
  api-gateway:
    image: apigateway:latest
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - discovery-server
      - config-server
      - redis
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - EUREKA_URL=http://discovery-server:8761/eureka
    networks:
      - darum-network

  # =========================
  # AUTH SERVICE
  # =========================
  auth-service:
    image: authservice:latest
    container_name: auth-service
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - discovery-server
      - config-server
      - postgres-auth
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - EUREKA_URL=http://discovery-server:8761/eureka
      - DB_HOST=postgres-auth
      - DB_USERNAME=sulaimonlawal
      - DB_PASSWORD=Omolade3
    networks:
      - darum-network

  # =========================
  # EMPLOYEE SERVICE
  # =========================
  employee-service:
    image: employeeservice:latest
    container_name: employee-service
    build:
      context: ./employee-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - discovery-server
      - config-server
      - postgres-employee
      - kafka
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - EUREKA_URL=http://discovery-server:8761/eureka
      - DB_HOST=postgres-employee
      - DB_USERNAME=sulaimonlawal
      - DB_PASSWORD=Omolade3
      - KAFKA_BROKER=kafka:9092
    networks:
      - darum-network

  # =========================
  # NOTIFICATION SERVICE
  # =========================
  notification-service:
    image: notificationservice:latest
    container_name: notification-service
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - discovery-server
      - config-server
      - postgres-notification
      - kafka
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - EUREKA_URL=http://discovery-server:8761/eureka
      - DB_HOST=postgres-notification
      - DB_USERNAME=sulaimonlawal
      - DB_PASSWORD=Omolade3
      - KAFKA_BROKER=kafka:9092
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - SENDGRID_FROM_EMAIL=${SENDGRID_FROM_EMAIL}
      - SENDGRID_FROM_NAME=${SENDGRID_FROM_NAME}
    networks:
      - darum-network

  # =========================
  # POSTGRES DATABASES
  # =========================
  postgres-auth:
    image: postgres:16
    container_name: postgres-auth
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: sulaimonlawal
      POSTGRES_PASSWORD: Omolade3
    ports:
      - "5435:5432"
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data
    networks:
      - darum-network

  postgres-employee:
    image: postgres:16
    container_name: postgres-employee
    environment:
      POSTGRES_DB: employee_db
      POSTGRES_USER: sulaimonlawal
      POSTGRES_PASSWORD: Omolade3
    ports:
      - "5436:5432"
    volumes:
      - postgres_employee_data:/var/lib/postgresql/data
    networks:
      - darum-network

  postgres-notification:
    image: postgres:16
    container_name: postgres-notification
    environment:
      POSTGRES_DB: notification_db
      POSTGRES_USER: sulaimonlawal
      POSTGRES_PASSWORD: Omolade3
    ports:
      - "5437:5432"
    volumes:
      - postgres_notification_data:/var/lib/postgresql/data
    networks:
      - darum-network

  # =========================
  # REDIS
  # =========================
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - darum-network

  # =========================
  # ZOOKEEPER
  # =========================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - darum-network

  # =========================
  # KAFKA
  # =========================
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper
    networks:
      - darum-network

# =========================
# VOLUMES
# =========================
volumes:
  postgres_auth_data:
  postgres_employee_data:
  postgres_notification_data:

# =========================
# NETWORK
# =========================
networks:
  darum-network:
    driver: bridge
